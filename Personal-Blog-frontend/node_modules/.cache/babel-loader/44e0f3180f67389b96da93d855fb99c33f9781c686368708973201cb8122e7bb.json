{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\my_projects\\\\python\\\\MyBlog\\\\frontend\\\\src\\\\components\\\\Post\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const decodedPostId = decodeURIComponent(postId);\n    getPostContent(decodedPostId);\n  }, [postId]);\n  const getPostContent = async decodedPostId => {\n    try {\n      const encodedPostId = encodeURIComponent(decodedPostId);\n      const response = await axios.get(`http://127.0.0.1:8000/post/${encodedPostId}`);\n      if (response.status === 200) {\n        const data = response.data;\n        setPost(data);\n      } else {\n        throw new Error('Failed to fetch post content');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"VAK5tdJEk0cqnRsmbvM4YDyoQLs=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Post","_ref","_s","match","postId","params","post","setPost","decodedPostId","decodeURIComponent","getPostContent","encodedPostId","encodeURIComponent","response","get","status","data","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/my_projects/python/MyBlog/frontend/src/components/Post/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Post = ({ match }) => {\r\n  const { postId } = match.params;\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const decodedPostId = decodeURIComponent(postId);\r\n    getPostContent(decodedPostId);\r\n  }, [postId]);\r\n\r\n  const getPostContent = async (decodedPostId) => {\r\n    try {\r\n      const encodedPostId = encodeURIComponent(decodedPostId);\r\n      const response = await axios.get(`http://127.0.0.1:8000/post/${encodedPostId}`);\r\n      if (response.status === 200) {\r\n        const data = response.data;\r\n        setPost(data);\r\n      } else {\r\n        throw new Error('Failed to fetch post content');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  if (!post) {\r\n    return <div>Loading post...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n      <p>hello </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACrB,MAAM;IAAEG;EAAO,CAAC,GAAGD,KAAK,CAACE,MAAM;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAGC,kBAAkB,CAACL,MAAM,CAAC;IAChDM,cAAc,CAACF,aAAa,CAAC;EAC/B,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMM,cAAc,GAAG,MAAOF,aAAa,IAAK;IAC9C,IAAI;MACF,MAAMG,aAAa,GAAGC,kBAAkB,CAACJ,aAAa,CAAC;MACvD,MAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,8BAA6BH,aAAc,EAAC,CAAC;MAC/E,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAI;QAC1BT,OAAO,CAACS,IAAI,CAAC;MACf,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,IAAI,CAACZ,IAAI,EAAE;IACT,oBAAOP,OAAA;MAAAqB,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEzB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAKd,IAAI,CAACmB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBzB,OAAA;MAAAqB,QAAA,EAAId,IAAI,CAACoB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA;MAAAqB,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCIF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}